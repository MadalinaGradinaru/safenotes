#Copyright Â© 2020 Denis Rendler <connect@rendler.me>
#
#Licensed under the Apache License, Version 2.0 (the "License");
#you may not use this file except in compliance with the License.
#You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
#Unless required by applicable law or agreed to in writing, software
#distributed under the License is distributed on an "AS IS" BASIS,
#WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#See the License for the specific language governing permissions and
#limitations under the License.


### get current stats
GET {{ domain }}/stats
Accept: application/json

> {%
client.global.set("stored-notes",response.body['stored-notes']);
client.global.set("total-notes", response.body['total-notes']);

%}



### add a new note
POST {{ domain }}/api/notes
Content-Type: application/json

{"content":  "this is a secret message"}

> {%
client.test("note added", function() {
    client.assert(response.status === 200, "Response status code should be 200")
    client.assert(response.body["link-id"] !== "", "Link ID should not be empty")
})
%}



### add a second note and store its uid
POST {{ domain }}/api/notes
Content-Type: application/json

{"content":  "this is a secret message2"}

> {%
client.test("note added", function() {
    client.assert(response.status === 200, "Response status code should be 200")
    client.assert(response.body["link-id"] !== "", "Link ID should not be empty")
})

client.global.set("uid", response.body["note-id"])
%}



### check stats
GET {{ domain }}/stats
Accept: application/json

> {%
stored = parseInt(client.global.get("stored-notes")) + 2;
totals = parseInt(client.global.get("total-notes")) + 2;

client.test("Stats", function() {
    client.assert(response.body["stored-notes"] === stored, "Wrong number of stored notes")
    client.assert(response.body["total-notes"] === totals, "Wrong number of total notes")
    // update number of notes
    client.global.set("stored-notes", response.body['stored-notes'])
    client.global.set("total-notes", response.body['total-notes'])
})

%}




###
GET {{ domain }}/api/notes/{{uid}}
Accept: application/json

> {%
client.test("note content was retrieved", function() {
    client.assert(response.status === 200, "Response status code should be 200")
    client.assert(response.body["content"] === "this is a secret message2", "Note content should not be empty")
})

%}


###
GET {{ domain }}/stats
Accept: application/json

> {%
stored = parseInt(client.global.get("stored-notes")) - 1;
totals = parseInt(client.global.get("total-notes"));

client.test("Stats", function() {
    client.assert(response.body["stored-notes"] === stored, "Wrong number of stored notes")
    client.assert(response.body["total-notes"] === totals, "Wrong number of total notes")
    // update number of notes
    client.global.set("stored-notes", response.body['stored-notes'])
})
%}




### Error
GET {{ domain }}/api/notes/{{uid}}
Accept: application/json

> {%
 client.test("404 note not found", function() {
     client.assert(response.status === 404, "Response status code should be 404")
 })
 %}

